name: Log release to Notion

env:
  OPENAI_ENABLED: false
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

on:
  pull_request:
    types: [closed]

jobs:
  notion-log:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare variables & functions
        env:
          PR_NUMBER:       ${{ github.event.pull_request.number }}
          PR_URL:          ${{ github.event.pull_request.html_url }}
          BASE_BRANCH:     ${{ github.event.pull_request.base.ref }}
          MERGED_AT_RAW:   ${{ github.event.pull_request.merged_at }}
          OPENAI_ENABLED:  ${{ env.OPENAI_ENABLED }}
          OPENAI_API_KEY:  ${{ env.OPENAI_API_KEY }}
        run: |
          set -euo pipefail

          CLEAN_DATE=${MERGED_AT_RAW%\"}
          CLEAN_DATE=${CLEAN_DATE#\"}
          FORMATTED_DATE=$(date -d "$CLEAN_DATE" +'%Y-%m-%d')
          echo "MERGED_AT=$FORMATTED_DATE" >> $GITHUB_ENV

          echo "REPO=${{ github.repository }}"       >> $GITHUB_ENV
          echo "TESTED_ANDROID=false"                >> $GITHUB_ENV

          echo "PR_NUMBER=$PR_NUMBER"                >> $GITHUB_ENV
          echo "PR_URL=$PR_URL"                      >> $GITHUB_ENV
          echo "COMMIT_HASH=${{ github.event.pull_request.merge_commit_sha }}" >> $GITHUB_ENV


          if [ "$BASE_BRANCH" = "main" ]; then
            echo "STATUS=Deploying to Staging"       >> $GITHUB_ENV
          else
            echo "STATUS=Tested in Production"    >> $GITHUB_ENV
          fi

      - name: Notion- Create Staging Entry
        if: github.event.pull_request.base.ref == 'main'
        run: |
          curl -sSL \
            -X POST https://api.notion.com/v1/pages \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Notion-Version: 2022-06-28" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "parent": { "database_id": "$NOTION_DATABASE_ID" },
            "properties": {
              "Version": {
                "title": [{
                  "text": {
                    "content": "PR #$PR_NUMBER",
                    "link": { "url": "$PR_URL" }
                  }
                }]
              },
              "Notes": {
                "rich_text":[{ "text":{ "content":"$SUMMARY" }}]
              },
              "Date": {
                "date":{ "start":"$MERGED_AT" }
              },
              "Repo": {
                "select":{ "name":"$REPO" }
              },
              "Tested in Android?": {
                "checkbox": $TESTED_ANDROID
              },
              "Status": {
                "status":{ "name":"$STATUS" }
              },
              "Commit Hash": {
                "rich_text":[{ "text":{ "content":"$COMMIT_HASH" }}]
              }
            }
          }
          EOF


      - name: Install jq for JSON parsing
        if: github.event.pull_request.base.ref == 'prod_new'
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: Notion - Update Production Entry
        if: github.event.pull_request.base.ref == 'prod_new'
        run: |
          set -euo pipefail
          sudo apt-get update && sudo apt-get install -y jq

          # query for the page whose Commit Hash matches
          PAGE_ID=$(curl -sSL "https://api.notion.com/v1/databases/$NOTION_DATABASE_ID/query" \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Notion-Version: 2022-06-28" \
            -H "Content-Type: application/json" \
            -d '{
              "filter": {
                "property": "Commit Hash",
                "rich_text": { "equals": "'"$COMMIT_HASH"'" }
              },
              "page_size": 1
            }' \
          | jq -r '.results[0].id')

          if [[ -z "$PAGE_ID" || "$PAGE_ID" == "null" ]]; then
            echo "❌ Could not find row for Commit $COMMIT_HASH"
            exit 1
          fi

          # patch only Status (and Date if desired)
          curl -sSL -X PATCH "https://api.notion.com/v1/pages/$PAGE_ID" \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Notion-Version: 2022-06-28" \
            -H "Content-Type: application/json" \
            -d '{
              "properties": {
                "Status": {
                  "status": { "name": "'"$STATUS"'" }
                },
                "Date": {
                  "date": { "start": "'"$MERGED_AT"'" }
                }
              }
            }'
